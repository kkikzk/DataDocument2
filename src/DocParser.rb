#
# DO NOT MODIFY!!!!
# This file is automatically generated by Racc 1.4.11
# from Racc grammer file "".
#

require 'racc/parser.rb'

require './Scanner'
require './ParseResult'
include DataDocument

class DocParser < Racc::Parser

module_eval(<<'...end DocParser.y/module_eval...', 'DocParser.y', 83)
def parse(str)
  keywords = [
	  'enum',
		'struct',
		'unnamed_struct',
		'int64',
		'int32',
		'int16',
		'int8',
		'uint64',
		'uint32',
		'uint16',
		'uint8',
		'bool',
		'string'
	]
	symbols = [
	  ',',
		';',
		'=',
		'..',
		':',
		'{',
		'}',
		'(',
		')',
		'[',
		']'
	]
  @sc = Scanner.new(keywords, symbols)
	@sc.parse(str)
  do_parse()
end

def next_token
  @sc.popToken
end
...end DocParser.y/module_eval...
##### State transition tables begin ###

racc_action_table = [
    64,    64,     8,    73,    17,    52,    49,    16,    72,    39,
    40,    41,    42,    43,    44,    45,    46,    47,    48,     7,
    68,    30,    78,    79,     8,    65,    65,    25,     9,    67,
     8,    28,    29,    26,    27,    20,    18,    31,    36,    15,
    50,    13,    53,    54,    55,    57,    59,    59,    14,    66,
    13,    69,    71,    10,    74,    75,    76,    77,     2,     6,
    81 ]

racc_action_check = [
    57,    73,    32,    62,    11,    36,    32,    11,    62,    32,
    32,    32,    32,    32,    32,    32,    32,    32,    32,     5,
    59,    23,    71,    71,     5,    57,    73,    18,     5,    59,
    23,    21,    21,    19,    20,    14,    13,    25,    30,    10,
    33,    17,    37,    38,    49,    53,    54,    56,     9,    58,
     8,    60,    61,     7,    64,    65,    68,    70,     1,     2,
    74 ]

racc_action_pointer = [
   nil,    58,    59,   nil,   nil,    13,   nil,    51,    48,    46,
    32,    -5,   nil,    23,    19,   nil,   nil,    39,    23,    26,
    32,    23,   nil,    19,   nil,    23,   nil,   nil,   nil,   nil,
    28,   nil,    -9,    32,   nil,   nil,     2,    40,    41,   nil,
   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,   nil,    37,
   nil,   nil,   nil,    32,    35,   nil,    36,    -3,    32,    17,
    43,    42,    -6,   nil,    26,    52,   nil,   nil,    44,   nil,
    40,    19,   nil,    -2,    57,   nil,   nil,   nil,   nil,   nil,
   nil,   nil ]

racc_action_default = [
    -1,    -8,   -45,    -2,    -3,   -45,    82,   -45,   -45,   -45,
   -45,   -45,   -10,   -45,   -14,    -8,    -9,   -45,   -45,   -45,
   -45,   -45,    -5,   -45,   -11,   -45,    -8,   -15,    -4,    -8,
   -45,   -12,   -45,    -8,   -16,    -6,   -45,   -45,   -45,   -20,
   -21,   -22,   -23,   -24,   -25,   -26,   -27,   -28,   -29,   -45,
   -13,   -17,    -7,   -31,   -39,    -8,   -39,   -45,   -45,   -45,
    -8,   -42,   -45,   -33,   -38,   -45,   -19,   -40,   -45,   -30,
   -45,   -45,   -32,   -45,   -36,   -37,   -41,   -18,   -43,   -44,
   -34,   -35 ]

racc_goto_table = [
    33,    51,     5,    63,    22,    12,    58,    37,    61,    19,
     4,     3,    11,    56,    24,    21,    23,    70,    35,    80,
    38,    62,     1,   nil,   nil,   nil,   nil,   nil,    51,    60,
    23 ]

racc_goto_check = [
    10,    11,     4,    18,     6,     8,    14,    12,    14,     9,
     3,     2,     7,    13,     8,     5,     4,    15,     6,    18,
    16,    17,     1,   nil,   nil,   nil,   nil,   nil,    11,    10,
     4 ]

racc_goto_pointer = [
   nil,    22,    10,     9,     1,     0,   -11,     4,    -3,    -5,
   -26,   -32,   -25,   -40,   -48,   -44,   -12,   -36,   -54 ]

racc_goto_default = [
   nil,   nil,   nil,   nil,    32,   nil,   nil,   nil,   nil,   nil,
   nil,    34,   nil,   nil,   nil,   nil,   nil,   nil,   nil ]

racc_reduce_table = [
  0, 0, :racc_error,
  0, 30, :_reduce_1,
  2, 30, :_reduce_2,
  2, 30, :_reduce_3,
  6, 31, :_reduce_4,
  1, 34, :_reduce_5,
  3, 34, :_reduce_6,
  4, 35, :_reduce_7,
  0, 33, :_reduce_8,
  4, 33, :_reduce_9,
  1, 36, :_reduce_10,
  3, 36, :_reduce_11,
  4, 37, :_reduce_12,
  7, 32, :_reduce_13,
  0, 38, :_reduce_14,
  2, 38, :_reduce_15,
  1, 39, :_reduce_16,
  2, 39, :_reduce_17,
  7, 40, :_reduce_18,
  5, 40, :_reduce_19,
  1, 41, :_reduce_20,
  1, 41, :_reduce_21,
  1, 41, :_reduce_22,
  1, 41, :_reduce_23,
  1, 41, :_reduce_24,
  1, 41, :_reduce_25,
  1, 41, :_reduce_26,
  1, 41, :_reduce_27,
  1, 41, :_reduce_28,
  1, 41, :_reduce_29,
  4, 45, :_reduce_30,
  0, 42, :_reduce_31,
  3, 42, :_reduce_32,
  1, 46, :_reduce_33,
  3, 46, :_reduce_34,
  3, 47, :_reduce_35,
  2, 47, :_reduce_36,
  2, 47, :_reduce_37,
  1, 47, :_reduce_38,
  0, 43, :_reduce_39,
  2, 43, :_reduce_40,
  3, 43, :_reduce_41,
  0, 44, :_reduce_42,
  2, 44, :_reduce_43,
  2, 44, :_reduce_44 ]

racc_reduce_n = 45

racc_shift_n = 82

racc_token_table = {
  false => 0,
  :error => 1,
  :IDENT => 2,
  :NUMBER => 3,
  :STRING => 4,
  :ATTRIBUTE => 5,
  "enum" => 6,
  "{" => 7,
  "}" => 8,
  "," => 9,
  "=" => 10,
  "[" => 11,
  "]" => 12,
  "(" => 13,
  ")" => 14,
  "struct" => 15,
  ":" => 16,
  ";" => 17,
  "int64" => 18,
  "int32" => 19,
  "int16" => 20,
  "int8" => 21,
  "uint64" => 22,
  "uint32" => 23,
  "uint16" => 24,
  "uint8" => 25,
  "bool" => 26,
  "string" => 27,
  ".." => 28 }

racc_nt_base = 29

racc_use_result_var = true

Racc_arg = [
  racc_action_table,
  racc_action_check,
  racc_action_default,
  racc_action_pointer,
  racc_goto_table,
  racc_goto_check,
  racc_goto_default,
  racc_goto_pointer,
  racc_nt_base,
  racc_reduce_table,
  racc_token_table,
  racc_shift_n,
  racc_reduce_n,
  racc_use_result_var ]

Racc_token_to_s_table = [
  "$end",
  "error",
  "IDENT",
  "NUMBER",
  "STRING",
  "ATTRIBUTE",
  "\"enum\"",
  "\"{\"",
  "\"}\"",
  "\",\"",
  "\"=\"",
  "\"[\"",
  "\"]\"",
  "\"(\"",
  "\")\"",
  "\"struct\"",
  "\":\"",
  "\";\"",
  "\"int64\"",
  "\"int32\"",
  "\"int16\"",
  "\"int8\"",
  "\"uint64\"",
  "\"uint32\"",
  "\"uint16\"",
  "\"uint8\"",
  "\"bool\"",
  "\"string\"",
  "\"..\"",
  "$start",
  "document",
  "enum",
  "struct",
  "attributes",
  "enum_decl",
  "each_enum_decl",
  "attribute_decl",
  "each_attribute_decl",
  "base_type_decl",
  "struct_element_decl",
  "each_struct_element_decl",
  "type_decl",
  "condition_decl",
  "array_decl",
  "default_value_decl",
  "unnamed_struct",
  "condition_decls",
  "each_condition_decl" ]

Racc_debug_parser = false

##### State transition tables end #####

# reduce 0 omitted

module_eval(<<'.,.,', 'DocParser.y', 7)
  def _reduce_1(val, _values, result)
     result = ParseResult.new() 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 8)
  def _reduce_2(val, _values, result)
     val[0].addEnum(val[1]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 9)
  def _reduce_3(val, _values, result)
     val[0].addStruct(val[1]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 12)
  def _reduce_4(val, _values, result)
     result = EnumData.new(val[2], val[0], val[4]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 14)
  def _reduce_5(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 15)
  def _reduce_6(val, _values, result)
     val[0].push(val[2]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 18)
  def _reduce_7(val, _values, result)
     result = EnumElement.new(val[1], val[0], val[3]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 20)
  def _reduce_8(val, _values, result)
     result = [] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 21)
  def _reduce_9(val, _values, result)
     result = val[0] + val[2] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 23)
  def _reduce_10(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 24)
  def _reduce_11(val, _values, result)
     val[0].push(val[2]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 27)
  def _reduce_12(val, _values, result)
     result = Attribute.new(val[0], val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 30)
  def _reduce_13(val, _values, result)
     result = StructData.new(val[2], val[0], val[3], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 32)
  def _reduce_14(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 33)
  def _reduce_15(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 35)
  def _reduce_16(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 36)
  def _reduce_17(val, _values, result)
     val[0].push(val[1]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 39)
  def _reduce_18(val, _values, result)
     result = StructElement.new(val[2], val[0], val[1], val[3], val[4], val[5]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 41)
  def _reduce_19(val, _values, result)
     result = StructElement.new(val[2], val[0], val[1], nil, val[3], nil) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 43)
  def _reduce_20(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 44)
  def _reduce_21(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 45)
  def _reduce_22(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 46)
  def _reduce_23(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 47)
  def _reduce_24(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 48)
  def _reduce_25(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 49)
  def _reduce_26(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 50)
  def _reduce_27(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 51)
  def _reduce_28(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 52)
  def _reduce_29(val, _values, result)
     result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 55)
  def _reduce_30(val, _values, result)
     result = StructData.new('unnamed_struct', [], nil, val[2]) 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 57)
  def _reduce_31(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 58)
  def _reduce_32(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 60)
  def _reduce_33(val, _values, result)
     result = [val[0]] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 61)
  def _reduce_34(val, _values, result)
     val[0].push(val[2]); result = val[0] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 63)
  def _reduce_35(val, _values, result)
     result = val[0].to_s + '..' + val[2].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 64)
  def _reduce_36(val, _values, result)
     result = val[0].to_s + '..Max' 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 65)
  def _reduce_37(val, _values, result)
     result = 'Min..' + val[1].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 66)
  def _reduce_38(val, _values, result)
     result = val[0].to_s + '..' + val[0].to_s 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 68)
  def _reduce_39(val, _values, result)
     result = 1 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 69)
  def _reduce_40(val, _values, result)
     result = -1 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 70)
  def _reduce_41(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 72)
  def _reduce_42(val, _values, result)
     result = nil 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 73)
  def _reduce_43(val, _values, result)
     result = val[1] 
    result
  end
.,.,

module_eval(<<'.,.,', 'DocParser.y', 74)
  def _reduce_44(val, _values, result)
     result = val[1] 
    result
  end
.,.,

def _reduce_none(val, _values, result)
  val[0]
end

end   # class DocParser
